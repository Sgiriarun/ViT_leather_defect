Parameters:
  SageMakerRoleName:
    Type: String

Resources:
  SageMakerRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${SageMakerRoleName}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "sagemaker.amazonaws.com"
            Action: "sts:AssumeRole"

  SageMakerFullAccessPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "SageMakerFullAccessPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "*"
            Resource: "*"
      Roles:
        - !Ref SageMakerRole

  CodeRepository:
    Type: AWS::SageMaker::CodeRepository
    Properties:
      CodeRepositoryName: leatherDefectDetecionRepo
      GitConfig: 
        Branch: main
        RepositoryUrl: "https://github.com/Sgiriarun/ViT_leather_defect"
        SecretArn: arn:aws:secretsmanager:ap-south-1:889861529919:secret:arun-git-H6ZcvN


  BasicNotebookInstanceLifecycleConfig:
    Type: "AWS::SageMaker::NotebookInstanceLifecycleConfig"
    Properties:
      NotebookInstanceLifecycleConfigName: stopidle
      OnStart:
        - Content:
            Fn::Base64: |
              #!/bin/bash
              
              set -e
              
              # OVERVIEW
              # This script stops a SageMaker notebook once it's idle for more than 1 hour (default time)
              # You can change the idle time for stop using the environment variable below.
              # If you want the notebook the stop only if no browsers are open, remove the --ignore-connections flag
              #
              # Note that this script will fail if either condition is not met
              #   1. Ensure the Notebook Instance has internet connectivity to fetch the example config
              #   2. Ensure the Notebook Instance execution role permissions to SageMaker:StopNotebookInstance to stop the notebook 
              #       and SageMaker:DescribeNotebookInstance to describe the notebook.
              #
              
              # PARAMETERS (30 mins idle is allowed)
              IDLE_TIME=1800 
                          
              echo "Fetching the autostop script"
              wget https://raw.githubusercontent.com/aws-samples/amazon-sagemaker-notebook-instance-lifecycle-config-samples/master/scripts/auto-stop-idle/autostop.py
              
              echo "Starting the SageMaker autostop script in cron"
              
              (crontab -l 2>/dev/null; echo "*/5 * * * * /usr/bin/python $PWD/autostop.py --time $IDLE_TIME --ignore-connections") | crontab -

  sageMakerNotebook:
    Type: AWS::SageMaker::NotebookInstance
    Properties: 
      DefaultCodeRepository: !GetAtt CodeRepository.CodeRepositoryName
      DirectInternetAccess: Enabled
      InstanceType: ml.t3.medium
      NotebookInstanceName: sample-notebook
      RoleArn: !GetAtt SageMakerRole.Arn
      VolumeSizeInGB: 10
      LifecycleConfigName: !GetAtt BasicNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleConfigName

Outputs:
  SageMakerRoleARN:
    Value: !GetAtt SageMakerRole.Arn
    Description: "The ARN of the SageMaker Role"